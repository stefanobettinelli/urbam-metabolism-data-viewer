#!/bin/bash -e

# Prevent running assemble in builders different than official STI image.
# The official nodejs:0.10-onbuild already run npm install and use different
# application folder.
[ -d "/usr/src/app" ] && exit 0

ARTIFACTS="/tmp/artifacts"
SRC="/tmp/src"

function restore_saved_artifacts() {
  if [ -d ${ARTIFACTS} ]; then
    echo "---> Restoring saved artifacts from prior build"
    if [ -d "${ARTIFACTS}/node_modules" ]; then
        mv "${ARTIFACTS}/node_modules" .
    fi
    if [ -d "${ARTIFACTS}/build" ]; then
        mv "${ARTIFACTS}/build" .
    fi
  fi
}

# FIXME: Linking of global modules is disabled for now as it causes npm failures
#        under RHEL7
# Global modules good to have
# npmgl=$(grep "^\s*[^#\s]" ../etc/npm_global_module_list | sort -u)
# Available global modules; only match top-level npm packages
#global_modules=$(npm ls -g 2> /dev/null | perl -ne 'print "$1\n" if /^\S+\s(\S+)\@[\d\.-]+/' | sort -u)
# List all modules in common
#module_list=$(/usr/bin/comm -12 <(echo "${global_modules}") | tr '\n' ' ')
# Link the modules
#npm link $module_list

if [ ! -z $HTTP_PROXY ]; then
	echo "---> Setting npm http proxy to $HTTP_PROXY"
	npm config set proxy $HTTP_PROXY
fi

if [ ! -z $http_proxy ]; then
	echo "---> Setting npm http proxy to $http_proxy"
	npm config set proxy $http_proxy
fi

if [ ! -z $HTTPS_PROXY ]; then
	echo "---> Setting npm https proxy to $HTTPS_PROXY"
	npm config set https-proxy $HTTPS_PROXY
fi

if [ ! -z $https_proxy ]; then
	echo "---> Setting npm https proxy to $https_proxy"
	npm config set https-proxy $https_proxy
fi

# Change the npm registry mirror if provided
if [ ! -z "$NPM_MIRROR" ]; then
	echo "---> Setting the npm package mirror to $NPM_MIRROR"
	npm config set registry $NPM_MIRROR
fi

# Change the npm production to false
if [ ! -z "$NPM_PROD" ]; then
	echo "---> Setting the npm production to $NPM_PROD"
	npm config set production $NPM_PROD
fi

cd ${SRC}
restore_saved_artifacts

echo "---> Installing Serve"
npm install serve

echo "---> Building your Node application from source"
npm install
npm run build

echo "---> Checking build directory permissions"
fix-permissions build

echo "---> Installing your application"
mv package.json "${HOME}"
mv build "${HOME}"
mv node_modules "${HOME}"
